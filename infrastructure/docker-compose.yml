version: "3.9"
services:
#     api:
#         container_name: dev1
#         image: registry.gitlab.com/arondb/dev1:latest
#         networks:
#             - backend
#         volumes:
#           - type: volume
#             source: dev1-vol
#             target: /app
#     nodered:
#         container_name: nodered
#         image: registry.gitlab.com/arondb/nodered:latest
#         networks:
#             - backend
#         ports:
#             - "1880:1880"
#         volumes:
#             - type: volume
#               source: nodered-vol
#               target: /data
#         environment:
#             - INFLUXDB_TOKEN=arontoken
#     influxdb:
#         container_name: influxdb
#         image: registry.gitlab.com/arondb/influxdb:latest
#         networks:
#             - backend
#         volumes:
#             - type: volume
#               source: influxdb-vol
#               target: /var/lib/influxdb2
#         environment:
#             - DOCKER_INFLUXDB_INIT_MODE=setup
#             - DOCKER_INFLUXDB_INIT_USERNAME=aron
#             - DOCKER_INFLUXDB_INIT_PASSWORD=mommy123
#             - DOCKER_INFLUXDB_INIT_ORG=aron
#             - DOCKER_INFLUXDB_INIT_BUCKET=aronbucket
#             - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=arontoken
#     grafana:
#         container_name: grafana
#         image: registry.gitlab.com/arondb/grafana:latest
#         networks:
#             - frontend
#             - backend
#             - db
#         ports: 
#             - "3000:3000"
#         volumes:
#             - type: volume
#               source: grafana-vol
#               target: /var/lib/grafana
#         environment:
#             - GF_SECURITY_ADMIN_USER=aron
#             - GF_SECURITY_ADMIN_PASSWORD=mommy123
#             - INFLUXDB_TOKEN=arontoken
#             - POSTGRES_USER=aron
#             - POSTGRES_DB=arondb
#             - POSTGRES_PASSWORD=aron
#     postgres:
#         container_name: postgres
#         image: registry.gitlab.com/arondb/postgres:latest
#         networks:
#             - db
#         volumes:
#           - type: volume
#             source: postgres-vol
#             target: /var/lib/postgresql/data/
#         environment:
#           - POSTGRES_USER=aron
#           - POSTGRES_PASSWORD=aron
#           - POSTGRES_DB=arondb
#     postgrest:
#         container_name: postgrest
#         image: postgrest/postgrest
#         networks:
#             - backend
#             - db
#         environment:
#           - PGRST_DB_URI=postgres://aron:aron@postgres:5432/arondb
#           - PGRST_DB_ANON_ROLE=aron
#           - PGRST_DB_SCHEMA=public
    wireguard:
        image: ghcr.io/linuxserver/wireguard
        container_name: wireguard
        environment:
          - PUID=1000
          - PGID=1000
          - TZ=America/Phoenix
          - PEERS=3
        volumes:
          - /home/linux/environment/infrastructure/wireguard/config:/config
          - /lib/modules:/lib/modules
        ports:
          - 51820:51820/udp
volumes:
    dev1-vol: {}
    nodered-vol: {}
    influxdb-vol: {}
    grafana-vol: {}
    postgres-vol: {}
networks:
    frontend: {}
    backend: {}
    db: {}